# This workflow will build a Java project with Maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Define the release version"
        required: true
        default: ""
      developmentVersion:
        description: "Define the snapshot version"
        required: true
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v3
      with:
        java-version: 20.0.1
        distribution: 'temurin'
        java-package: 'jdk'
        cache: 'maven'
        server-id: ossrh
    - name: Configure Git User
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"
    - name: Import GPG Key
      uses: crazy-max/ghaction-import-gpg@v5.0.0
      with:
        gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
    - name: Verify whether a release is ready
      id: release
      shell: bash
      run: |
        if [ "${{ github.event.inputs.releaseVersion }}" != "" ] && [ "${{ github.event.inputs.developmentVersion }}" != "" ]; then
          echo "auto_release=true" >> $GITHUB_OUTPUT
        else
          echo "auto_release=false" >> $GITHUB_OUTPUT
        fi
    - name: Release with Maven
      run: |
        mvn -B -U \
          -Pci-cd \
          release:prepare \
          release:perform \
          javadoc:jar \
          source:jar \
          -s settings.xml \
          -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} \
          -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
          -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} \
          deploy
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        AUTO_RELEASE_AFTER_CLOSE: ${{ steps.release.outputs.auto_release }}
    - name: Change Jar name
      id: jar_name
      shell: bash
      run: |
        mv ./target/*.*:my-app.jar ./target/maven-hello-world.jar
    - name: short commit
      id: vars
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      run: |
        echo "archive_download_url=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${GITHUB_TOKEN}"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/OWNER/REPO/actions/artifacts | jq -r '.artifacts[0].archive_download_url')"  >> $GITHUB_OUTPUT
        echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
    - name: Upload math result for job 1
      uses: actions/upload-artifact@v3
      with:
        name: maven-hello-world-${{ env.sha_short }}
        path: ./target/maven-hello-world.jar
    - name: Workflow release tag
      uses: peter-evans/repository-dispatch@v2
      if: ${{ github.event.inputs.releaseVersion }} != "" && ${{ github.event.inputs.developmentVersion }} != ""
      with:
        event-type: create-release
        client-payload: '{"auto_release": "${{ steps.release.outputs.auto_release }}", "archive_download_url": "${{ steps.vars.outputs.archive_download_url }}"}'